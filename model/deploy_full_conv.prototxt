name: "hyper_normal_layers"
layer {
  name: "data"
  type: "Input"
  top: "data"
  input_param { shape: { dim: 1 dim: 3 dim: 224 dim: 224}}
}
layer {
  name: "normal"
  type: "Input"
  top: "normal"
  input_param { shape: { dim: 1 dim: 3 dim: 224 dim: 224}}
}

layer {
  bottom: "data"
  top: "conv1_1"
  name: "conv1_1"
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "relu1_1"
  type: "ReLU"
}
layer {
  bottom: "conv1_1"
  top: "conv1_2"
  name: "conv1_2"
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_2"
  top: "conv1_2"
  name: "relu1_2"
  type: "ReLU"
}
layer {
  bottom: "conv1_2"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool1"
  top: "conv2_1"
  name: "conv2_1"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "relu2_1"
  type: "ReLU"
}
layer {
  bottom: "conv2_1"
  top: "conv2_2"
  name: "conv2_2"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_2"
  top: "conv2_2"
  name: "relu2_2"
  type: "ReLU"
}
layer {
  bottom: "conv2_2"
  top: "pool2"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool2"
  top: "conv3_1"
  name: "conv3_1"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "relu3_1"
  type: "ReLU"
}
layer {
  bottom: "conv3_1"
  top: "conv3_2"
  name: "conv3_2"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_2"
  top: "conv3_2"
  name: "relu3_2"
  type: "ReLU"
}
layer {
  bottom: "conv3_2"
  top: "conv3_3"
  name: "conv3_3"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_3"
  top: "conv3_3"
  name: "relu3_3"
  type: "ReLU"
}
layer {
  bottom: "conv3_3"
  top: "pool3"
  name: "pool3"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool3"
  top: "conv4_1"
  name: "conv4_1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_1"
  top: "conv4_1"
  name: "relu4_1"
  type: "ReLU"
}
layer {
  bottom: "conv4_1"
  top: "conv4_2"
  name: "conv4_2"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_2"
  top: "conv4_2"
  name: "relu4_2"
  type: "ReLU"
}
layer {
  bottom: "conv4_2"
  top: "conv4_3"
  name: "conv4_3"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_3"
  top: "conv4_3"
  name: "relu4_3"
  type: "ReLU"
}
layer {
  bottom: "conv4_3"
  top: "pool4"
  name: "pool4"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool4"
  top: "conv5_1"
  name: "conv5_1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_1"
  top: "conv5_1"
  name: "relu5_1"
  type: "ReLU"
}
layer {
  bottom: "conv5_1"
  top: "conv5_2"
  name: "conv5_2"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_2"
  top: "conv5_2"
  name: "relu5_2"
  type: "ReLU"
}
layer {
  bottom: "conv5_2"
  top: "conv5_3"
  name: "conv5_3"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_3"
  top: "conv5_3"
  name: "relu5_3"
  type: "ReLU"
}
layer {
  bottom: "conv5_3"
  top: "pool5"
  name: "pool5"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool5"
  top: "fc6-conv"
  name: "fc6-conv"
  type: "Convolution"
  convolution_param {
    num_output: 4096
    kernel_size: 7
  }
}
layer {
  bottom: "fc6-conv"
  top: "fc6-conv"
  name: "relu6"
  type: "ReLU"
}
layer {
  bottom: "fc6-conv"
  top: "fc6-conv"
  name: "drop6"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  bottom: "fc6-conv"
  top: "fc7-conv"
  name: "fc7-conv"
  type: "Convolution"
  convolution_param {
    num_output: 4096
    kernel_size: 1
  }
}
layer {
  bottom: "fc7-conv"
  top: "fc7-conv"
  name: "relu7"
  type: "ReLU"
}

# sample them on the fly
layer {
    bottom: "normal"
    bottom: "conv1_2"
    bottom: "conv2_2"
    bottom: "conv3_3"
    bottom: "conv4_3"
    bottom: "conv5_3"
    bottom: "fc7-conv"
    top: "hypercolumns"
    top: "normal_point"
    name: "hypercolumns"
    type: "HyperColumns"
    hypercolumns_param {
	is_train: false
    }
}

layer {
    bottom: "hypercolumns"
    top: "fc1-conv"
    name: "fc1-conv"
    type: "Convolution"
    convolution_param {
        num_output: 4096
	kernel_size: 1
   }
}

layer {
    bottom: "fc1-conv"
    top: "fc1-conv"
    type: "ReLU"
    name: "relu1"
}
layer {
    bottom: "fc1-conv"
    top: "fc1-conv"
    type: "Dropout"
    name: "drop1"
    dropout_param {
        dropout_ratio: 0.5
    }
}

layer {
    bottom: "fc1-conv"
    top: "fc2-conv"
    name: "fc2-conv"
    type: "Convolution"
    convolution_param {
        num_output: 4096
	kernel_size: 1
   }
}
layer {
    bottom: "fc2-conv"
    top: "fc2-conv"
    type: "ReLU"
    name: "relu2"
}
layer {
    bottom: "fc2-conv"
    top: "fc2-conv"
    type: "Dropout"
    name: "drop2"
    dropout_param {
        dropout_ratio: 0.5
    }
}

layer {
    bottom: "fc2-conv"
    top: "fc3-conv"
    name: "fc3-conv"
    type: "Convolution"
    convolution_param {
        num_output: 3
	kernel_size: 1
   }
}

#layer {
#   bottom: "fc3"
#    top: "prediction"
#    type: "L2Norm"
#   name: "Norm"
#}


